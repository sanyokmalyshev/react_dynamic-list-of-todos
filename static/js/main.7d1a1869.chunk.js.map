{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["TodoList","todos","showTodo","showModal","useState","todoId","setTodoId","className","map","todo","id","completed","title","type","onClick","handleButton","TodoFilter","filterTodos","inputValue","setInputValue","selectValue","setSelectValue","handleSearch","value","name","onChange","e","target","placeholder","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","getUser","userId","Loader","TodoModal","closeModal","user","setUser","useEffect","a","userData","href","email","App","setTodos","setShowModal","setTodo","visibleTodos","setVisibleTodos","todosServer","filterValues","filter","toDo","toLowerCase","includes","length","clickedTodo","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7d1a1869.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  showTodo: (todo: Todo) => void;\n  showModal: boolean;\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, showTodo, showModal }) => {\n  const [todoId, setTodoId] = useState(0);\n\n  const handleButton = (todo: Todo) => {\n    showTodo(todo);\n    setTodoId(todo.id);\n  };\n\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {todos.map(todo => (\n          <tr\n            data-cy=\"todo\"\n            className={showModal\n              && todo.id === todoId ? 'has-background-info-light' : ''}\n            key={todo.id}\n          >\n            <td className=\"is-vcentered\">{todo.id}</td>\n            <td className=\"is-vcentered\">\n              {todo.completed ? (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              ) : (\n                ''\n              )}\n            </td>\n            <td className=\"is-vcentered is-expanded\">\n              <p\n                className={`${todo.completed ? 'has-text-success' : 'has-text-danger'}`}\n              >\n                {todo.title}\n              </p>\n            </td>\n            <td className=\"has-text-right is-vcentered\">\n              <button\n                data-cy=\"selectButton\"\n                className=\"button\"\n                type=\"button\"\n                onClick={() => {\n                  handleButton(todo);\n                }}\n              >\n                <span className=\"icon\">\n                  <i className={`far ${showModal && todo.id === todoId ? 'fa-eye-slash' : 'fa-eye'}`} />\n                </span>\n              </button>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import { useState } from 'react';\n\ntype Todos = {\n  filterTodos: (selectValue: string, inputValue: string) => void;\n};\n\nexport const TodoFilter: React.FC<Todos> = ({ filterTodos }) => {\n  const [inputValue, setInputValue] = useState('');\n  const [selectValue, setSelectValue] = useState('all');\n\n  const handleSearch = (value: string, name: string) => {\n    if (name === 'search') {\n      setInputValue(value);\n      filterTodos(selectValue, value);\n    }\n\n    if (name === 'select') {\n      setSelectValue(value);\n      filterTodos(value, inputValue);\n    }\n  };\n\n  const clearState = () => {\n    setInputValue('');\n    filterTodos('all', '');\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            name=\"select\"\n            onChange={(e) => {\n              handleSearch(e.target.value, e.target.name);\n            }}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          name=\"search\"\n          value={inputValue}\n          onChange={(e) => {\n            handleSearch(e.target.value, e.target.name);\n          }}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        {inputValue && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => {\n                clearState();\n              }}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo;\n  closeModal: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, closeModal }) => {\n  const {\n    id,\n    title,\n    completed,\n    userId,\n  } = todo;\n  const [user, setUser] = useState<User>();\n\n  useEffect(() => {\n    (async function loadUser() {\n      const userData = await getUser(userId);\n\n      setUser(userData);\n    }());\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => {\n                closeModal();\n              }}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed ? (\n                <strong className=\"has-text-success\">Done</strong>\n              ) : (\n                <strong className=\"has-text-danger\">Planned</strong>\n              )}\n\n              {' by '}\n\n              <a href={`mailto:${user.email}`}>\n                {user.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { getTodos } from './api';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [todo, setTodo] = useState<Todo>(todos[0]);\n  const [visibleTodos, setVisibleTodos] = useState<Todo[]>(todos);\n\n  useEffect(() => {\n    (async function loadTodos() {\n      const todosServer = await getTodos();\n\n      setTodos(todosServer);\n      setVisibleTodos(todosServer);\n    }());\n  }, []);\n\n  const showTodo = (clickedTodo: Todo) => {\n    setTodo(clickedTodo);\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const filterTodos = (selectValue: string, inputValue: string) => {\n    let filterValues = todos;\n\n    switch (selectValue) {\n      case 'active':\n        filterValues = filterValues.filter(toDo => !toDo.completed);\n        break;\n      case 'completed':\n        filterValues = filterValues.filter(toDo => toDo.completed);\n        break;\n      default:\n        break;\n    }\n\n    filterValues = filterValues\n      .filter(toDo => toDo\n        .title.toLowerCase()\n        .includes(inputValue.toLowerCase()));\n\n    setVisibleTodos(filterValues);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                filterTodos={filterTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {todos.length === 0 && <Loader />}\n              <TodoList\n                todos={visibleTodos}\n                showTodo={showTodo}\n                showModal={showModal}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {showModal\n        && <TodoModal todo={todo} closeModal={closeModal} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}